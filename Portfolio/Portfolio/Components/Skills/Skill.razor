@using Portfolio.Services

<Row Class="text-center">
    <Column ColumnSize="ColumnSize.Is2.OnDesktop"></Column>
    <Column ColumnSize="ColumnSize.IsAuto">
        <object data="@IconPath" type="image/svg+xml" class="skill_icon"></object>
    </Column>
    <Column ColumnSize="ColumnSize.Is6.OnDesktop.Is5.OnMobile">
        <Text Alignment="TextAlignment.Left">
            @Name.GetEnumDescription()
        </Text>
    </Column>

    @if (Level != SkillLevel.Zero) {
        @if (!string.IsNullOrEmpty(TooltipText)) {
            <Tooltip Text="@TooltipText">
                <Column Float="Float.Right" ColumnSize="ColumnSize.IsAuto.OnDesktop.IsAuto.OnMobile">
                    <Text Alignment="TextAlignment.Right">
                        @for (int i = 0; i < (int) Level; i++) {
                            <i class="fas fa-circle"></i>
                        }
                        @for (int i = 0; i < 5 - (int) Level; i++) {
                            <i class="far fa-circle"></i>
                        }
                    </Text>
                </Column>
            </Tooltip>
        }
        else {
            <Column Float="Float.Right" ColumnSize="ColumnSize.IsAuto.OnDesktop.IsAuto.OnMobile">
                <Text Alignment="TextAlignment.Right">
                    @for (int i = 0; i < (int) Level; i++) {
                        <i class="fas fa-circle"></i>
                    }
                    @for (int i = 0; i < 5 - (int) Level; i++) {
                        <i class="far fa-circle"></i>
                    }
                </Text>
            </Column>
        }
    }

</Row>

@code {

    [Parameter]
    public SkillName Name { get; set; } = SkillName.Unknown;

    [Parameter]
    public SkillLevel Level { get; set; } = SkillLevel.Zero;

    [CascadingParameter(Name = nameof(SkillList.TooltipText))]
    protected string TooltipText { get; set; }

    private string IconPath => SkillIconSerivce.IconsPath[Name];
}